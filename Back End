from tkinter import *
from tkinter import ttk
from tkinter import filedialog
from shareplum import Site, Office365
import csv, json


# this function will allow the user to upload data to the sharepoint list by selecting a local file from their desktop

def AddData():
    # imported credentials and site information from json config file.
    with open('config.json') as config_file:
        config = json.load(config_file)

    USERNAME = config['username']
    PASSWORD = config['password']
    ROOT_SITE = config['root_site']
    SPECIFIC_SITE = config['specific_site']

    # auth to sharepoint
    authcookie = Office365(ROOT_SITE, username=USERNAME, password=PASSWORD).GetCookies()
    site = Site(SPECIFIC_SITE, authcookie=authcookie)

    sp_list = site.List("ListName")

    new_rows = []

    filename = filedialog.askopenfilename()

    # this opens the file and passes the data into list new rows in dict format and appends the items to list new rows
    try:
        with open(filename) as file:
            sp_test_data = csv.DictReader(file)

            for line in sp_test_data:
                new_rows.append(line)
    except FileNotFoundError:
        pass

    try:
        sp_list.UpdateListItems(data=new_rows, kind="New")
        window = Tk()
        l1 = Label(window, text="Rows successfully added!")
        l1.grid(row=0, column=0)
        window.mainloop()
    except:
        window = Tk()
        l2 = Label(window, text="No data to upload was found!")
        l2.grid(row=0, column=0)
        window.mainloop()


# this function will allow the user to delete up to 4k rows from the sharepoint list

def DeleteData():
    with open('config.json') as config_file:
        config = json.load(config_file)

    USERNAME = config['username']
    PASSWORD = config['password']
    ROOT_SITE = config['root_site']
    SPECIFIC_SITE = config['specific_site']


    authcookie = Office365(ROOT_SITE, username=USERNAME, password=PASSWORD).GetCookies()
    site = Site(SPECIFIC_SITE, authcookie=authcookie)

    sp_list = site.List("ListName")

    # this line gets items from the sharepoint list with a 4K limit. Sharepoint has a 5k data limit for rows returned.
    # data = sp_list.GetListItems()
    data = sp_list.GetListItems(row_limit=4000)

    # this code continues to delete rows from the list as long as the data variable is not None/returns data.
    if data != None:
        try:
            sp_ids = [item["ID"] for item in data]
            sp_list.UpdateListItems(data=sp_ids, kind="Delete")
            window = Tk()
            l1 = Label(window, text="Up to 4K Rows have been deleted!")
            l1.grid(row=0, column=0)
            window.mainloop()
        except:
            window = Tk()
            l2 = Label(window, text="No data to delete was found!")
            l2.grid(row=0, column=0)
            window.mainloop()


def AddList():

    # imported credentials and site information from json config file.
    with open('config.json') as config_file:
        config = json.load(config_file)

    USERNAME = config['username']
    PASSWORD = config['password']
    ROOT_SITE = config['root_site']
    SPECIFIC_SITE = config['specific_site']

    # auth to sharepoint
    authcookie = Office365(ROOT_SITE, username=USERNAME, password=PASSWORD).GetCookies()
    site = Site(SPECIFIC_SITE, authcookie=authcookie)

    def b1_command():
        try:
            window = Tk()
            list_name = e1.get()
            list_description = e2.get()
            site.AddList(list_name, description=list_description, template_id="Custom List")
            b1_command_label1 = Label(window, text="List successfully created!")
            b1_command_label1.pack()
            window.mainloop()
        except:
            window = Tk()
            b1_command_label2 = Label(window, text="An error has occurred!")
            b1_command_label2.pack()
            window.mainloop()

    window = Tk()
    l1 = Label(window, text="Enter a name for your list: ")
    l1.pack()
    e1 = Entry(window)
    e1.pack()
    l2 = Label(window, text="Enter a description: ")
    l2.pack()
    e2 = Entry(window)
    e2.pack()
    b1 = Button(window, text="Click to create list.", command=b1_command)
    b1.pack()
    window.mainloop()

